from collections import deque

import networkx as nx


def dfs(graph, start, end, search_queue, visited=None):
    if visited is None:
        visited = set()

    search_queue.append(start)

    if start == end:
        return True

    visited.add(start)
    for neighbor in graph[start]:
        if neighbor not in visited:
            if dfs(graph, neighbor, end, search_queue, visited):
                break


def bfs(graph, start, end):
    visited = set()
    queue = deque([start])
    search_queue = list()

    while queue:
        vertex = queue.popleft()
        search_queue.append(vertex)
        if vertex == end:
            break

        if vertex not in visited:
            visited.add(vertex)
            queue.extend(set(graph[vertex]) - visited)

    return search_queue

# Створюємо порожній граф
G = nx.Graph()

# Додаємо станції метро (вершини графа)
stations = [
    'Лісова', 'Чернігівська', 'Дарниця', 'Лівобережна', 'Гідропарк', 'Арсенальна',
    'Хрещатик', 'Театральна', 'Університет', 'Вокзальна', 'Політехнічний інститут',
    'Шулявська', 'Берестейська', 'Нивки', 'Святошин', 'Житомирська', 'Академмістечко',

    'Героїв Дніпра', 'Мінська', 'Оболонь', 'Почайна', 'Тараса Шевченка', 'Контрактова площа',
    'Поштова площа', 'Майдан Незалежності', 'Площа Льва Толстого', 'Олімпійська', 'Палац Україна',
    'Либідська', 'Деміївська', 'Голосіївська', 'Васильківська', 'Виставковий центр', 'Іподром', 'Теремки',

    'Сирець', 'Дорогожичі', 'Лук’янівська', 'Золоті ворота', 'Палац спорту', 'Кловська',
    'Печерська', 'Дружби народів', 'Видубичі', 'Славутич', 'Осокорки', 'Позняки', 'Харківська', 'Вирлиця', 'Бориспільська', 'Червоний хутір'
]

# Додаємо станції як вершини графа
G.add_nodes_from(stations)

# Зв'язки між станціями (ребра графа)
connections = [
    # Червона лінія
    ('Лісова', 'Чернігівська'), ('Чернігівська', 'Дарниця'), ('Дарниця', 'Лівобережна'),
    ('Лівобережна', 'Гідропарк'), ('Гідропарк', 'Арсенальна'), ('Арсенальна', 'Хрещатик'),
    ('Хрещатик', 'Театральна'), ('Театральна', 'Університет'), ('Університет', 'Вокзальна'),
    ('Вокзальна', 'Політехнічний інститут'), ('Політехнічний інститут', 'Шулявська'),
    ('Шулявська', 'Берестейська'), ('Берестейська', 'Нивки'), ('Нивки', 'Святошин'),
    ('Святошин', 'Житомирська'), ('Житомирська', 'Академмістечко'),

    # Синя лінія
    ('Героїв Дніпра', 'Мінська'), ('Мінська', 'Оболонь'), ('Оболонь', 'Почайна'),
    ('Почайна', 'Тараса Шевченка'), ('Тараса Шевченка', 'Контрактова площа'),
    ('Контрактова площа', 'Поштова площа'), ('Поштова площа', 'Майдан Незалежності'),
    ('Майдан Незалежності', 'Площа Льва Толстого'), ('Площа Льва Толстого', 'Олімпійська'),
    ('Олімпійська', 'Палац Україна'), ('Палац Україна', 'Либідська'), ('Либідська', 'Деміївська'),
    ('Деміївська', 'Голосіївська'), ('Голосіївська', 'Васильківська'), ('Васильківська', 'Виставковий центр'),
    ('Виставковий центр', 'Іподром'), ('Іподром', 'Теремки'),

    # Зелена лінія
    ('Сирець', 'Дорогожичі'), ('Дорогожичі', 'Лук’янівська'), ('Лук’янівська', 'Золоті ворота'),
    ('Золоті ворота', 'Палац спорту'), ('Палац спорту', 'Кловська'), ('Кловська', 'Печерська'),
    ('Печерська', 'Дружби народів'), ('Дружби народів', 'Видубичі'), ('Видубичі', 'Славутич'),
    ('Славутич', 'Осокорки'), ('Осокорки', 'Позняки'), ('Позняки', 'Харківська'),
    ('Харківська', 'Вирлиця'), ('Вирлиця', 'Бориспільська'), ('Бориспільська', 'Червоний хутір'),

    # Пересадочні станції
    ('Хрещатик', 'Майдан Незалежності'), ('Театральна', 'Золоті ворота'),
    ('Палац спорту', 'Площа Льва Толстого')
]

# Додаємо ребра до графа
G.add_edges_from(connections)

# Виклик функції DFS
visited = set()
search_queue = list()
dfs(G, 'Голосіївська', 'Гідропарк', search_queue, visited)
print()
print(len(search_queue))
print(search_queue)

visited = bfs(G, 'Голосіївська', 'Гідропарк')
print(len(visited))
print(visited)

